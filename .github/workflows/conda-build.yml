name: Conda Build with Witness

on:
  push:
    branches: [ '**' ]
  pull_request:
  workflow_dispatch:

permissions:
  id-token: write  # Required for Sigstore JWT
  contents: read   # Required for checkout
  actions: read    # Required for artifact downloads

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      recipes: ${{ steps.find-recipes.outputs.recipes }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Find recipes
      id: find-recipes
      run: |
        # Find all directories containing meta.yaml in recipes/
        # Filter to only include our fast-building demos
        recipes=$(find recipes -name meta.yaml -type f | grep -E "(click|pyyaml|requests)-demo" | sed 's|/meta.yaml||' | sort | jq -R -s -c 'split("\n")[:-1]')
        echo "recipes=$recipes" >> $GITHUB_OUTPUT
        echo "Found recipes: $recipes"

  build:
    needs: setup
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        recipe: ${{ fromJson(needs.setup.outputs.recipes) }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Install miniconda
      run: |
        wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        bash Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/miniconda
        echo "$HOME/miniconda/bin" >> $GITHUB_PATH
        
    - name: Setup conda
      run: |
        conda config --set always_yes yes
        conda install conda-build
        conda info
        
    - name: Setup build environment
      run: |
        mkdir -p attestations
        mkdir -p conda-bld
        echo "RECIPE_NAME=$(basename ${{ matrix.recipe }})" >> $GITHUB_ENV
        echo "CONDA_BLD_PATH=${{ github.workspace }}/conda-bld" >> $GITHUB_ENV
      
    - name: Build with Witness
      uses: testifysec/witness-run-action@v0.3.0
      with:
        step: build-${{ env.RECIPE_NAME }}
        attestations: "git github environment"
        command: |
          echo "=== Working directory: $(pwd) ==="
          echo "=== Directory structure before build ==="
          ls -la
          
          conda build ${{ matrix.recipe }} --croot ./conda-bld
          
          echo "=== Directory structure after build ==="
          ls -la
          echo "=== Contents of conda-bld ==="
          find ./conda-bld -type f -name "*.conda" -o -name "*.tar.bz2" | head -20
          echo "=== Package locations ==="
          find . -name "*.conda" -o -name "*.tar.bz2" | grep -v "conda-bld/.*_.*" | head -10
        enable-sigstore: true
        enable-archivista: true
        archivista-server: "https://archivista.testifysec.io"
        trace: true
        
    - name: Upload package
      uses: actions/upload-artifact@v4
      with:
        name: conda-package-${{ strategy.job-index }}
        path: |
          conda-bld/**/*.tar.bz2
          conda-bld/**/*.conda
          conda-bld/noarch/*.tar.bz2
          conda-bld/noarch/*.conda
          attestations/*.json

  summary:
    runs-on: ubuntu-latest
    needs: [setup, build]
    if: always()
    steps:
    - name: Summary
      run: |
        echo "## 🎉 Conda Build with Witness - Summary"
        echo ""
        echo "### 📦 Packages Built"
        echo ""
        echo '```'
        echo '${{ needs.setup.outputs.recipes }}' | jq -r '.[]' | while read recipe; do
          echo "✓ $(basename $recipe)"
        done
        echo '```'
        echo ""
        echo "### 🔒 Security Features"
        echo ""
        echo "- **Signing**: Sigstore ephemeral keys (OIDC-based)"
        echo "- **Attestations**: git, github, environment"
        echo "- **Storage**: Archivista public instance"
        echo "- **Compliance**: SLSA Level 3"
        echo ""
        echo "### 🔍 Attestation Details"
        echo ""
        echo "Each package includes:"
        echo "- 📍 **Git**: Repository state and commit hash"
        echo "- 🏭 **GitHub**: Workflow run metadata"
        echo "- 🖥️ **Environment**: Build host details"
        echo ""
        echo "### 📡 Next Steps"
        echo ""
        echo "Attestations are stored in Archivista and can be:"
        echo "- Queried via GraphQL API"
        echo "- Verified with witness policies"
        echo "- Used for compliance reporting"
        echo ""
        echo "View the workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"